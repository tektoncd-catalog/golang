apiVersion: tekton.dev/v1
kind: Task
metadata:
  annotations:
    tekton.dev/catalog: tektoncd.golang
    tekton.dev/catalog-support-tier: verified
    tekton.dev/catalog-url: https://github.com/tektoncd-catalog/golang
    tekton.dev/categories: Build Tools
    tekton.dev/displayName: golang build
    tekton.dev/pipelines.minVersion: 0.12.1
    tekton.dev/platforms: linux/amd64,linux/s390x,linux/ppc64le
    tekton.dev/signature: MEYCIQD3SUEwqc1qbXXln+XMWd61fi5ks21FD3dEV37n/j2pzQIhAKfVG0ciLqbObDKdo5T/Y3urJ4x41v2eb3QeNIz0lCCq
    tekton.dev/tags: build-tool
  creationTimestamp: null
  labels:
    app.kubernetes.io/version: 1.0.0
  name: golang-build
spec:
  description: This Task is Golang task to build Go projects.
  params:
  - description: base package to build in
    name: package
  - default: ./cmd/...
    description: 'packages to build (default: ./cmd/...)'
    name: packages
  - default: latest
    description: golang version to use for builds
    name: version
  - default: -v
    description: flags to use for the test command
    name: flags
  - default: linux
    description: running program's operating system target
    name: GOOS
  - default: amd64
    description: running program's architecture target
    name: GOARCH
  - default: auto
    description: value of module support
    name: GO111MODULE
  - default: ""
    description: Go caching directory path
    name: GOCACHE
  - default: ""
    description: Go mod caching directory path
    name: GOMODCACHE
  - default: ""
    description: Toggle cgo tool during Go build. Use value '0' to disable cgo (for
      static builds).
    name: CGO_ENABLED
  - default: ""
    description: Go checksum database url. Use value 'off' to disable checksum validation.
    name: GOSUMDB
  steps:
  - env:
    - name: GOOS
      value: $(params.GOOS)
    - name: GOARCH
      value: $(params.GOARCH)
    - name: GO111MODULE
      value: $(params.GO111MODULE)
    - name: GOCACHE
      value: $(params.GOCACHE)
    - name: GOMODCACHE
      value: $(params.GOMODCACHE)
    - name: CGO_ENABLED
      value: $(params.CGO_ENABLED)
    - name: GOSUMDB
      value: $(params.GOSUMDB)
    image: docker.io/library/golang:$(params.version)
    name: build
    resources: {}
    script: |
      if [ ! -e $GOPATH/src/$(params.package)/go.mod ];then
        SRC_PATH="$GOPATH/src/$(params.package)"
        mkdir -p $SRC_PATH
        cp -R "$(workspaces.source.path)"/* $SRC_PATH
        cd $SRC_PATH
      fi
      go build $(params.flags) $(params.packages)
    workingDir: $(workspaces.source.path)
  workspaces:
  - name: source
